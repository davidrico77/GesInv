<?xml version="1.0" encoding="UTF-8"?>
<!--

    This file is part of proyecto-gi.

    proyecto-gi is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    proyecto-gi is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with proyecto-gi.  If not, see <http://www.gnu.org/licenses/>.

-->
		<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<sec:global-method-security pre-post-annotations="enabled" />
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Registry for converters and formatters -->		
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven conversion-service="conversionService">
	    <mvc:argument-resolvers>
	        <ref bean="sortResolver"/>
	        <ref bean="pageableResolver" />
	    </mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<!-- Enables Spring's context configuration using annotations  -->
	<context:annotation-config />
	
	<!--  Enables the Spring MVC @Controller programming model --> 
	<context:component-scan base-package="ucm.fdi.tfg.users.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.pagos.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.proyecto.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.inventarios.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.viajes.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.fileupload.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.storage.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.investigacion.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.centros.business.web"></context:component-scan>
	<context:component-scan base-package="ucm.fdi.tfg.departamentos.business.web"></context:component-scan>
	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/webjars/**" location="/webjars/" />
 
 
 
   <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
      <property name="templateEngine" ref="templateEngine" />
       <property name="characterEncoding" value="UTF-8" />
    </bean>
    
     <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
			 <property name="templateResolvers">
				<set>
					<ref bean="templateResolver" />
				</set>
			</property>
			<property name="additionalDialects">
				<set>
					<bean
						class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect" />
					<bean
						class="org.thymeleaf.extras.java8time.dialect.Java8TimeDialect" />
				</set>
			</property>
	</bean>

	<!-- Thymeleaf Template Resolver -->
	<bean id="templateResolver"
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML" />
		<property name="characterEncoding" value="UTF-8" />
		<property name="cacheTTLMs" value="1000" />
	</bean>
	
	
	<!-- -->
	<!-- Servlet >= 3.0 file upload configuration -->
	<!-- -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	
	<!-- -->
	<!-- Spring Data JPA web support -->
	<!-- http://docs.spring.io/spring-data/jpa/docs/current/reference/html/#core.web -->
	<!-- To use spring data jpa web suppor with spring XML config see: http://stackoverflow.com/questions/22135002/spring-data-does-not-handle-pageable-action-argument-creation/22143995#22143995 -->
	<!-- -->

	<bean class="org.springframework.data.repository.support.DomainClassConverter">
	   <constructor-arg ref="conversionService" />
	</bean>
	<bean id="sortResolver" class="org.springframework.data.web.SortHandlerMethodArgumentResolver" />
	<bean id="pageableResolver" class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
	    <constructor-arg ref="sortResolver" />
	</bean>
	
</beans>
